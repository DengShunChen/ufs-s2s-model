load 'platforms.input'
load 'nemscommon.input'

########################################################################

# Common prep step at the top of all fv3 tests:

embed bash fv3_prep(RUNDIR,modules,CNTL) [[[
        rm -rf "$RUNDIR"
        mkdir -p "$RUNDIR" "$CNTL"
        cd @[RUNDIR]

        set +e

        source @[plat%SRCnems]/conf/module-setup.sh.inc
        module purge
        module use $( dirname $modules )
        module load $( basename $modules )

        mkdir RESTART INPUT

        export MPI_TYPE_DEPTH=20
        export OMP_STACKSIZE=512M
        export ESMF_RUNTIME_COMPLIANCECHECK=OFF:depth=4

	# Set the stack limit as high as we can.
        if [[ $( ulimit -s ) != unlimited ]] ; then
	    for try_limit in 20000 18000 12000 9000 6000 3000 1500 1000 800 ; do
	        if [[ ! ( $( ulimit -s ) -gt $(( try_limit * 1000 )) ) ]] ; then
		    ulimit -s $(( try_limit * 1000 ))
	    else
		    break
	        fi
	    done
        fi

	ulimit -a
]]]

# Function that uses compile.sh to build.  Note the defaults are no
# make options and no build name.  No build name creates fv3.exe and
# modules.fv3.
embed bash compile.sh(MAKE_OPTS=' ',BUILD_NR='',fv3,modules,md5) [[[
        cd @[plat%HOMEnems]/tests/
        # Run the compile.sh.  Convert wcoss.cray to wcoss_cray to
        # make the FV3 happy.
        rm -f @[fv3] @[modules]
        if ( which aprun ) && [[ @[plat%PLATFORM_NAME] == wcoss.cray ]] ; then
            aprun -n 1 -j 1 -N 1 -d 24 \
                ./compile.sh "@[plat%HOMEnems]/FV3" \
                $( echo @[plat%MACHINE_ID] | sed 's,\.,_,g' ) \
                @[MAKE_OPTS] @[BUILD_NR]
        else
            ./compile.sh "@[plat%HOMEnems]/FV3" \
                $( echo @[plat%MACHINE_ID] | sed 's,\.,_,g' ) \
                @[MAKE_OPTS] @[BUILD_NR]
        fi
        mkdir -p "@[plat%EXECrt]" "@[plat%INCrt]"
        cp -fp ./fv3.exe @[fv3]
        cp -fp ./modules.fv3 @[modules]
        md5sum ./fv3.exe > @[md5]
]]]

########################################################################

# Builds for the fv3.  Presently there is only one build, but with two
# different build systems.  Results should be identical.

build fv3.exe {
    use plat

    # Note:
    #  plat%EXECrt = temporary directory for executables and md5 sums
    #  plat%INCrt  = temporary directory for modulefiles
    target="@[plat%EXECrt]/fv3.exe"   # NEMS.x installation location
    modules.nems="@[plat%INCrt]/modules.fv3"  # modulefile for this NEMS.x
    md5sum="@[target].md5"            # MD5SUM for this NEMS.x

    # build: script to build the NEMS.x.  For now, this is an embedded
    # bash script.
    build=compile.sh(fv3="@[target]",modules="@[modules.nems]",md5="@[md5sum]")
}

 
build fv3_32bit.exe {
    # This block builds the FV3 in 32 bit mode.  It is otherwise
    # identical to the fv3.exe block.
    use plat

    # Note:
    #  plat%EXECrt = temporary directory for executables and md5 sums
    #  plat%INCrt  = temporary directory for modulefiles
    target="@[plat%EXECrt]/fv3_32bit.exe"   # NEMS.x installation location
    modules.nems="@[plat%INCrt]/modules.fv3_32bit"  # modulefile for this NEMS.x
    md5sum="@[target].md5"            # MD5SUM for this NEMS.x

    # build: script to build the NEMS.x.  For now, this is an embedded
    # bash script.
    build=compile.sh(fv3="@[target]",modules="@[modules.nems]",md5="@[md5sum]",
                    MAKE_OPTS='32BIT=Y')
}

build fv3_appbuilder.exe {
    # This block is similar to the fv3.exe block, but uses the
    # NEMSAppBuilder.  We do this for one compset, just to make sure
    # the NEMSAppBuilder does not break.
    use plat
    target="@[plat%EXECrt]/fv3_appbuilder.exe"
    modules.nems="@[plat%INCrt]/modules_appbuilder.fv3"
    md5sum="@[target].md5"

    # The NEMSAppBuilder is another embedded bash script in nemscommon.input
    build=NEMSAppBuilder(NEMS.x="@[target]",modules.nems="@[modules.nems]",
                         OPTS="app=standaloneFV3",md5sum="@[md5sum]")
}

build fv3_mom6_cice.exe { 
    # Use NEMSAppBuilder to build a coupled app.   
    use plat 
    target="@[plat%EXECrt]/fv3_mom6_cice.exe" 
    modules.nems="@[plat%INCrt]/modules_fv3_mom6_cice" 
    md5sum="@[target].md5" 
 
    # The NEMSAppBuilder is another embedded bash script in nemscommon.input 
    build=NEMSAppBuilder(NEMS.x="@[target]",modules.nems="@[modules.nems]", 
                         OPTS="app=coupledFV3_MOM6_CICE",md5sum="@[md5sum]") 
}

########################################################################

# Common variables used by many tests and input files:

fv3_defaults = {
    WARM_START='.F.'
    NGGPS_IC='.T.'
    EXTERNAL_IC='.T.'
    MAKE_NH='.T.'
    MOUNTAIN='.F.'
    NA_INIT='1'
    READ_INCREMENT='.F.'
    FDIAG='0,1,2,3,4,5,6,7,8,9,10,11,12,15,18,21,24'
    NSTF_NAME='2,1,1,0,5'
    CPLFLX='.F.'

    ENS_NUM='1'
    SYEAR='2016'
    SMONTH='10'
    SDAY='03'
    SHOUR='00'
    DT_ATMOS='1800'

    DAYS='1'
    FHMAX='24'
    NPX='97'
    NPY='97'
    NFHOUT='3'
    NFHMAX_HF='12'
    NFHOUT_HF='1'

    QUILTING='.true.'
    WRITE_GROUP=1
    NUM_FILES=2
    FILENAME_BASE="'dyn' 'phy'"
    OUTPUT_GRID="'cubed_sphere_grid'"
    WRITE_NEMSIOFILE='.false.'
    WRITE_NEMSIOFLIP='.false.'
    IMO='384'
    JMO='190'

    SPPT='-999.0'
    SHUM='-999.0'
    SKEB='-999.0'

    IAU_INC_FILES=''

    walltime=7200
}

########################################################################

######################################################################## 
 
test cpld_fv3_atmnostep: fv3_mom6_cice.exe { 
    use plat 
    use plat%default_resources 
    use fv3_defaults 
 
    TEST_DESCR="Compare FV3 control results with previous trunk version" 
    CNTL_NAME='fv3_control' 
 
    COM="@[plat%COMrt]/@[TEST_NAME]"          # Test result area 
    RUNDIR="@[plat%TMPrt]/@[TEST_NAME]"       # Test work area 
    CNTL="@[plat%BASELINE]/@[CNTL_NAME]"      # Control baseline area 
    FV3_input_data="@[plat%INPUTS]/FV3_input_data" 
 
    build=fv3_mom6_cice.exe 
 
    prep=fv3_prep( 
        RUNDIR="@[RUNDIR]",modules="@[fv3_mom6_cice.exe%modules.nems]", 
        CNTL="@[CNTL]") 
 
    # - nems.configure --- 
    nems_configure='atm_nostep' 
    atm_petlist_bounds="-1 -1" 
    atm_model='fv3' 
 
    # Specify input files. 
    filters input { 
      #    WORK FILE  <=filter=   SOURCE FILE 
          'input.nml' <=atparse=  "@[PARMnems]/input.nml.IN" 
    'model_configure' <=atparse=  "@[PARMnems]/model_configure.IN" 
                 'aerosol.dat' <=copyfrom= "@[FV3_input_data]/INPUT" 
  'co2historicaldata_201*.txt' <=copyfrom= "@[FV3_input_data]/INPUT" 
      'sfc_emissivity_idx.txt' <=copyfrom= "@[FV3_input_data]/INPUT" 
   'solarconstant_noaa_an.txt' <=copyfrom= "@[FV3_input_data]/INPUT" 
               '*grb' <=copyfrom= "@[FV3_input_data]" 
            '*_table' <=copyfrom= "@[FV3_input_data]" 
         '*configure' <=copyfrom= "@[FV3_input_data]" 
              'INPUT' <=copy=     "@[FV3_input_data]/INPUT" 
     'nems.configure' <=atparse=  "@[PARMnems]/nems.configure.@[nems_configure].IN" 
    } 
 
    # Specify output files:
    criteria output {
        # WORKFILE                            .comparison. TARGET
        'atmos_4xdaily.tile1.nc' .bitcmp. "@[CNTL]"
        'atmos_4xdaily.tile2.nc' .bitcmp. "@[CNTL]"
        'atmos_4xdaily.tile3.nc' .bitcmp. "@[CNTL]"
        'atmos_4xdaily.tile4.nc' .bitcmp. "@[CNTL]"
        'atmos_4xdaily.tile5.nc' .bitcmp. "@[CNTL]"
        'atmos_4xdaily.tile6.nc' .bitcmp. "@[CNTL]"
        'phyf000.tile1.nc'      .bitcmp. "@[CNTL]"
        'phyf000.tile2.nc'      .bitcmp. "@[CNTL]"
        'phyf000.tile3.nc'      .bitcmp. "@[CNTL]"
        'phyf000.tile4.nc'      .bitcmp. "@[CNTL]"
        'phyf000.tile5.nc'      .bitcmp. "@[CNTL]"
        'phyf000.tile6.nc'      .bitcmp. "@[CNTL]"
        'phyf024.tile1.nc'      .bitcmp. "@[CNTL]"
        'phyf024.tile2.nc'      .bitcmp. "@[CNTL]"
        'phyf024.tile3.nc'      .bitcmp. "@[CNTL]"
        'phyf024.tile4.nc'      .bitcmp. "@[CNTL]"
        'phyf024.tile5.nc'      .bitcmp. "@[CNTL]"
        'phyf024.tile6.nc'      .bitcmp. "@[CNTL]"
        'dynf000.tile1.nc'      .bitcmp. "@[CNTL]"
        'dynf000.tile2.nc'      .bitcmp. "@[CNTL]"
        'dynf000.tile3.nc'      .bitcmp. "@[CNTL]"
        'dynf000.tile4.nc'      .bitcmp. "@[CNTL]"
        'dynf000.tile5.nc'      .bitcmp. "@[CNTL]"
        'dynf000.tile6.nc'      .bitcmp. "@[CNTL]"
        'dynf024.tile1.nc'      .bitcmp. "@[CNTL]"
        'dynf024.tile2.nc'      .bitcmp. "@[CNTL]"
        'dynf024.tile3.nc'      .bitcmp. "@[CNTL]"
        'dynf024.tile4.nc'      .bitcmp. "@[CNTL]"
        'dynf024.tile5.nc'      .bitcmp. "@[CNTL]"
        'dynf024.tile6.nc'      .bitcmp. "@[CNTL]"
        'RESTART/coupler.res'                   .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.nc'                .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile1.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile2.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile3.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile4.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile5.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile6.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile1.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile2.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile3.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile4.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile5.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile6.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile1.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile2.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile3.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile4.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile5.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile6.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile1.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile2.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile3.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile4.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile5.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile6.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile1.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile2.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile3.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile4.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile5.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile6.nc'             .bitcmp. "@[CNTL]/RESTART/"

      # Executable validation.  This makes an MD5 sum of the fv3.exe
      # for comparison against the MD5 sum made in the build job.
      # This is to ensure the executable did not change during the
      # test suite.
        "@[build%target]" .md5cmp. "@[fv3_mom6_cice.exe%md5sum]" 
    }
 
    spawn execute { 
        # Run the  
        {"@[build%target]", ranks="@[TASKS]" } 
    } 
} 
 
######################################################################## 
 
test cpld_fv3_atmstep: fv3_mom6_cice.exe { 
    use plat 
    use plat%default_resources 
    use fv3_defaults 
 
    TEST_DESCR="Compare FV3 control results with previous trunk version" 
    CNTL_NAME='fv3_control' 
 
    COM="@[plat%COMrt]/@[TEST_NAME]"          # Test result area 
    RUNDIR="@[plat%TMPrt]/@[TEST_NAME]"       # Test work area 
    CNTL="@[plat%BASELINE]/@[CNTL_NAME]"      # Control baseline area 
    FV3_input_data="@[plat%INPUTS]/FV3_input_data" 
 
    build=fv3_mom6_cice.exe 
 
    prep=fv3_prep( 
        RUNDIR="@[RUNDIR]",modules="@[fv3_mom6_cice.exe%modules.nems]", 
        CNTL="@[CNTL]") 
 
    # - nems.configure --- 
    nems_configure='atm' 
    atm_model='fv3' 
    atm_petlist_bounds="-1 -1" 
    coupling_interval_sec=1800.0  # 30min coupling, fv3 time step 
 
    # Specify input files. 
    filters input { 
      #    WORK FILE  <=filter=   SOURCE FILE 
          'input.nml' <=atparse=  "@[PARMnems]/input.nml.IN" 
    'model_configure' <=atparse=  "@[PARMnems]/model_configure.IN" 
                 'aerosol.dat' <=copyfrom= "@[FV3_input_data]/INPUT" 
  'co2historicaldata_201*.txt' <=copyfrom= "@[FV3_input_data]/INPUT" 
      'sfc_emissivity_idx.txt' <=copyfrom= "@[FV3_input_data]/INPUT" 
   'solarconstant_noaa_an.txt' <=copyfrom= "@[FV3_input_data]/INPUT" 
               '*grb' <=copyfrom= "@[FV3_input_data]" 
            '*_table' <=copyfrom= "@[FV3_input_data]" 
         '*configure' <=copyfrom= "@[FV3_input_data]" 
              'INPUT' <=copy=     "@[FV3_input_data]/INPUT" 
     'nems.configure' <=atparse=  "@[PARMnems]/nems.configure.@[nems_configure].IN" 
    } 
 
    # Specify output files:
    criteria output {
        # WORKFILE                            .comparison. TARGET
        'atmos_4xdaily.tile1.nc' .bitcmp. "@[CNTL]"
        'atmos_4xdaily.tile2.nc' .bitcmp. "@[CNTL]"
        'atmos_4xdaily.tile3.nc' .bitcmp. "@[CNTL]"
        'atmos_4xdaily.tile4.nc' .bitcmp. "@[CNTL]"
        'atmos_4xdaily.tile5.nc' .bitcmp. "@[CNTL]"
        'atmos_4xdaily.tile6.nc' .bitcmp. "@[CNTL]"
        'phyf000.tile1.nc'      .bitcmp. "@[CNTL]"
        'phyf000.tile2.nc'      .bitcmp. "@[CNTL]"
        'phyf000.tile3.nc'      .bitcmp. "@[CNTL]"
        'phyf000.tile4.nc'      .bitcmp. "@[CNTL]"
        'phyf000.tile5.nc'      .bitcmp. "@[CNTL]"
        'phyf000.tile6.nc'      .bitcmp. "@[CNTL]"
        'phyf024.tile1.nc'      .bitcmp. "@[CNTL]"
        'phyf024.tile2.nc'      .bitcmp. "@[CNTL]"
        'phyf024.tile3.nc'      .bitcmp. "@[CNTL]"
        'phyf024.tile4.nc'      .bitcmp. "@[CNTL]"
        'phyf024.tile5.nc'      .bitcmp. "@[CNTL]"
        'phyf024.tile6.nc'      .bitcmp. "@[CNTL]"
        'dynf000.tile1.nc'      .bitcmp. "@[CNTL]"
        'dynf000.tile2.nc'      .bitcmp. "@[CNTL]"
        'dynf000.tile3.nc'      .bitcmp. "@[CNTL]"
        'dynf000.tile4.nc'      .bitcmp. "@[CNTL]"
        'dynf000.tile5.nc'      .bitcmp. "@[CNTL]"
        'dynf000.tile6.nc'      .bitcmp. "@[CNTL]"
        'dynf024.tile1.nc'      .bitcmp. "@[CNTL]"
        'dynf024.tile2.nc'      .bitcmp. "@[CNTL]"
        'dynf024.tile3.nc'      .bitcmp. "@[CNTL]"
        'dynf024.tile4.nc'      .bitcmp. "@[CNTL]"
        'dynf024.tile5.nc'      .bitcmp. "@[CNTL]"
        'dynf024.tile6.nc'      .bitcmp. "@[CNTL]"
        'RESTART/coupler.res'                   .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.nc'                .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile1.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile2.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile3.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile4.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile5.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile6.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile1.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile2.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile3.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile4.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile5.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile6.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile1.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile2.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile3.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile4.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile5.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile6.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile1.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile2.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile3.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile4.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile5.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile6.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile1.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile2.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile3.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile4.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile5.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile6.nc'             .bitcmp. "@[CNTL]/RESTART/"

      # Executable validation.  This makes an MD5 sum of the fv3.exe
      # for comparison against the MD5 sum made in the build job.
      # This is to ensure the executable did not change during the
      # test suite.
        "@[build%target]" .md5cmp. "@[fv3_mom6_cice.exe%md5sum]" 
    }
 
    spawn execute { 
        # Run the  
        {"@[build%target]", ranks="@[TASKS]" } 
    } 
} 
 
######################################################################## 
 
test cpld_fv3_rst_atmstep: fv3_mom6_cice.exe { 
    use fv3_control 
 
    TEST_DESCR="Compare FV3 restart results with previous trunk version" 
    CNTL_NAME='fv3_restart' 
     
    WARM_START='.T.' 
    NGGPS_IC='.F.' 
    EXTERNAL_IC='.F.' 
    MAKE_NH='.F.' 
    MOUNTAIN='.T.' 
    NA_INIT='0' 
    FHMAX='48' 
    FDIAG='6' 
    NSTF_NAME='2,0,1,0,5' 
 
    build=fv3_mom6_cice.exe 
 
    prep=fv3_prep( 
        RUNDIR="@[RUNDIR]",modules="@[fv3_mom6_cice.exe%modules.nems]", 
        CNTL="@[CNTL]") 
 
    # - nems.configure --- 
    nems_configure='atm' 
    atm_model='fv3' 
    atm_petlist_bounds="-1 -1" 
    coupling_interval_sec=1800.0  # 30min coupling, fv3 time step 
 
    # Specify input files. 
    filters input { 
      #    WORK FILE  <=filter=   SOURCE FILE 
                   'input.nml' <=atparse=  "@[PARMnems]/input.nml.IN" 
             'model_configure' <=atparse=  "@[PARMnems]/model_configure.IN" 
                 'aerosol.dat' <=copyfrom= "@[FV3_input_data]/INPUT" 
  'co2historicaldata_201*.txt' <=copyfrom= "@[FV3_input_data]/INPUT" 
      'sfc_emissivity_idx.txt' <=copyfrom= "@[FV3_input_data]/INPUT" 
   'solarconstant_noaa_an.txt' <=copyfrom= "@[FV3_input_data]/INPUT" 
                        '*grb' <=copyfrom= "@[FV3_input_data]" 
                     '*_table' <=copyfrom= "@[FV3_input_data]" 
                  '*configure' <=copyfrom= "@[FV3_input_data]" 
                       'INPUT' <=copy=     "@[FV3_input_data]/RESTART" 
              'nems.configure' <=atparse=  "@[PARMnems]/nems.configure.@[nems_configure].IN" 
    } 
 
 
    # Specify output files:
    criteria output {
        # WORKFILE                            .comparison. TARGET
        'atmos_4xdaily.tile1.nc' .bitcmp. "@[CNTL]"
        'atmos_4xdaily.tile2.nc' .bitcmp. "@[CNTL]"
        'atmos_4xdaily.tile3.nc' .bitcmp. "@[CNTL]"
        'atmos_4xdaily.tile4.nc' .bitcmp. "@[CNTL]"
        'atmos_4xdaily.tile5.nc' .bitcmp. "@[CNTL]"
        'atmos_4xdaily.tile6.nc' .bitcmp. "@[CNTL]"
        'phyf027.tile1.nc'      .bitcmp. "@[CNTL]"
        'phyf027.tile2.nc'      .bitcmp. "@[CNTL]"
        'phyf027.tile3.nc'      .bitcmp. "@[CNTL]"
        'phyf027.tile4.nc'      .bitcmp. "@[CNTL]"
        'phyf027.tile5.nc'      .bitcmp. "@[CNTL]"
        'phyf027.tile6.nc'      .bitcmp. "@[CNTL]"
        'phyf048.tile1.nc'      .bitcmp. "@[CNTL]"
        'phyf048.tile2.nc'      .bitcmp. "@[CNTL]"
        'phyf048.tile3.nc'      .bitcmp. "@[CNTL]"
        'phyf048.tile4.nc'      .bitcmp. "@[CNTL]"
        'phyf048.tile5.nc'      .bitcmp. "@[CNTL]"
        'phyf048.tile6.nc'      .bitcmp. "@[CNTL]"
        'dynf027.tile1.nc'      .bitcmp. "@[CNTL]"
        'dynf027.tile2.nc'      .bitcmp. "@[CNTL]"
        'dynf027.tile3.nc'      .bitcmp. "@[CNTL]"
        'dynf027.tile4.nc'      .bitcmp. "@[CNTL]"
        'dynf027.tile5.nc'      .bitcmp. "@[CNTL]"
        'dynf027.tile6.nc'      .bitcmp. "@[CNTL]"
        'dynf048.tile1.nc'      .bitcmp. "@[CNTL]"
        'dynf048.tile2.nc'      .bitcmp. "@[CNTL]"
        'dynf048.tile3.nc'      .bitcmp. "@[CNTL]"
        'dynf048.tile4.nc'      .bitcmp. "@[CNTL]"
        'dynf048.tile5.nc'      .bitcmp. "@[CNTL]"
        'dynf048.tile6.nc'      .bitcmp. "@[CNTL]"
        'RESTART/coupler.res'                   .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.nc'                .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile1.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile2.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile3.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile4.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile5.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile6.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile1.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile2.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile3.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile4.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile5.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile6.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile1.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile2.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile3.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile4.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile5.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile6.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile1.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile2.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile3.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile4.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile5.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile6.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile1.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile2.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile3.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile4.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile5.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile6.nc'             .bitcmp. "@[CNTL]/RESTART/"

      # Executable validation.  This makes an MD5 sum of the fv3.exe
      # for comparison against the MD5 sum made in the build job.
      # This is to ensure the executable did not change during the
      # test suite.
        "@[build%target]" .md5cmp. "@[fv3_mom6_cice.exe%md5sum]" 
    } 
 
    spawn execute { 
        # Run the 
        {"@[build%target]", ranks="@[TASKS]" } 
     } 
} 
 
######################################################################## 
 
test cpld_fv3_mom6_cice_cold: fv3_mom6_cice.exe { 
    use plat 
    use plat%default_resources 
    use fv3_defaults 
 
    TEST_DESCR="Fully coupled FV3-MOM6-CICE system - cold start" 
    CNTL_NAME='fv3_control' 
 
    CPLFLX='.T.' 
 
    COM="@[plat%COMrt]/@[TEST_NAME]"          # Test result area 
    RUNDIR="@[plat%TMPrt]/@[TEST_NAME]"       # Test work area 
    CNTL="@[plat%BASELINE]/@[CNTL_NAME]"      # Control baseline area 
    FV3_input_data="@[plat%INPUTS]/FV3_input_data" 

    UGCS_input_data="@[plat%UGCS_input_data]" 
 
    build=fv3_mom6_cice.exe 
 
    prep=fv3_prep( 
        RUNDIR="@[RUNDIR]",modules="@[fv3_mom6_cice.exe%modules.nems]", 
        CNTL="@[CNTL]") 
     
    # - set total number of tasks to satisfy coupled application need 
    TASKS=202 
 
    # - nems.configure --- 
    nems_configure='medcold_atm_ocn_ice' 
    med_model='nems' 
    med_petlist_bounds="0 149" 
    atm_model='fv3' 
    atm_petlist_bounds="0 149" 
    ocn_model='mom6' 
    ocn_petlist_bounds="150 181" 
    ice_model='cice' 
    ice_petlist_bounds="182 201" 
    coupling_interval_slow_sec=1800.0  # 30min coupling, fv3 time step 
    coupling_interval_fast_sec=1800.0  # 30min coupling, fv3 time step 
 
    # Specify input files. 
    filters input { 
      #    WORK FILE  <=filter=   SOURCE FILE 
          'input.nml' <=atparse=  "@[PARMnems]/input.nml.IN" 
    'model_configure' <=atparse=  "@[PARMnems]/model_configure.IN" 
                 'aerosol.dat' <=copyfrom= "@[FV3_input_data]/INPUT" 
  'co2historicaldata_201*.txt' <=copyfrom= "@[FV3_input_data]/INPUT" 
      'sfc_emissivity_idx.txt' <=copyfrom= "@[FV3_input_data]/INPUT" 
   'solarconstant_noaa_an.txt' <=copyfrom= "@[FV3_input_data]/INPUT" 
               '*grb' <=copyfrom= "@[FV3_input_data]" 
            '*_table' <=copyfrom= "@[FV3_input_data]" 
         '*configure' <=copyfrom= "@[FV3_input_data]" 
              'INPUT' <=copy=     "@[FV3_input_data]/INPUT" 
     'nems.configure' <=atparse=  "@[PARMnems]/nems.configure.@[nems_configure].IN" 
                  '*' <=copydir=  "@[UGCS_input_data]/CICE"
                  '*' <=copydir=  "@[UGCS_input_data]/MOM6"
            'INPUT/*' <=copyfrom= "@[UGCS_input_data]/MOM6-INPUT"
             'OUTPUT' <=copy=     "@[UGCS_input_data]/EmptyDir"
            'history' <=copy=     "@[UGCS_input_data]/EmptyDir"
            'restart' <=copy=     "@[UGCS_input_data]/EmptyDir"
    } 
 
    # Specify output files:
    criteria output {
        # WORKFILE                            .comparison. TARGET
        'atmos_4xdaily.tile1.nc' .bitcmp. "@[CNTL]"
        'atmos_4xdaily.tile2.nc' .bitcmp. "@[CNTL]"
        'atmos_4xdaily.tile3.nc' .bitcmp. "@[CNTL]"
        'atmos_4xdaily.tile4.nc' .bitcmp. "@[CNTL]"
        'atmos_4xdaily.tile5.nc' .bitcmp. "@[CNTL]"
        'atmos_4xdaily.tile6.nc' .bitcmp. "@[CNTL]"
        'phyf000.tile1.nc'      .bitcmp. "@[CNTL]"
        'phyf000.tile2.nc'      .bitcmp. "@[CNTL]"
        'phyf000.tile3.nc'      .bitcmp. "@[CNTL]"
        'phyf000.tile4.nc'      .bitcmp. "@[CNTL]"
        'phyf000.tile5.nc'      .bitcmp. "@[CNTL]"
        'phyf000.tile6.nc'      .bitcmp. "@[CNTL]"
        'phyf024.tile1.nc'      .bitcmp. "@[CNTL]"
        'phyf024.tile2.nc'      .bitcmp. "@[CNTL]"
        'phyf024.tile3.nc'      .bitcmp. "@[CNTL]"
        'phyf024.tile4.nc'      .bitcmp. "@[CNTL]"
        'phyf024.tile5.nc'      .bitcmp. "@[CNTL]"
        'phyf024.tile6.nc'      .bitcmp. "@[CNTL]"
        'dynf000.tile1.nc'      .bitcmp. "@[CNTL]"
        'dynf000.tile2.nc'      .bitcmp. "@[CNTL]"
        'dynf000.tile3.nc'      .bitcmp. "@[CNTL]"
        'dynf000.tile4.nc'      .bitcmp. "@[CNTL]"
        'dynf000.tile5.nc'      .bitcmp. "@[CNTL]"
        'dynf000.tile6.nc'      .bitcmp. "@[CNTL]"
        'dynf024.tile1.nc'      .bitcmp. "@[CNTL]"
        'dynf024.tile2.nc'      .bitcmp. "@[CNTL]"
        'dynf024.tile3.nc'      .bitcmp. "@[CNTL]"
        'dynf024.tile4.nc'      .bitcmp. "@[CNTL]"
        'dynf024.tile5.nc'      .bitcmp. "@[CNTL]"
        'dynf024.tile6.nc'      .bitcmp. "@[CNTL]"
        'RESTART/coupler.res'                   .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.nc'                .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile1.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile2.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile3.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile4.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile5.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile6.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile1.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile2.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile3.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile4.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile5.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile6.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile1.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile2.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile3.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile4.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile5.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile6.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile1.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile2.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile3.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile4.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile5.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile6.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile1.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile2.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile3.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile4.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile5.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile6.nc'             .bitcmp. "@[CNTL]/RESTART/"

      # Executable validation.  This makes an MD5 sum of the fv3.exe
      # for comparison against the MD5 sum made in the build job.
      # This is to ensure the executable did not change during the
      # test suite.
        "@[build%target]" .md5cmp. "@[fv3_mom6_cice.exe%md5sum]" 
    }
 
    spawn execute { 
        # Run the  
        {"@[build%target]", ranks="@[TASKS]" } 
    } 
} 
 
######################################################################## 
 
test cpld_fv3_mom6_cice: fv3_mom6_cice.exe { 
    use plat 
    use plat%default_resources 
    use fv3_defaults 
 
    TEST_DESCR="Fully coupled FV3-MOM6-CICE system from Mediator restarts" 
    CNTL_NAME='fv3_control' 
 
    CPLFLX='.T.' 
 
    COM="@[plat%COMrt]/@[TEST_NAME]"          # Test result area 
    RUNDIR="@[plat%TMPrt]/@[TEST_NAME]"       # Test work area 
    CNTL="@[plat%BASELINE]/@[CNTL_NAME]"      # Control baseline area 
    FV3_input_data="@[plat%INPUTS]/FV3_input_data" 

    UGCS_input_data="@[plat%UGCS_input_data]"
 
    build=fv3_mom6_cice.exe 
 
    prep=fv3_prep( 
        RUNDIR="@[RUNDIR]",modules="@[fv3_mom6_cice.exe%modules.nems]", 
        CNTL="@[CNTL]") 
     
    # - set total number of tasks to satisfy coupled application need 
    TASKS=202 
 
    # - nems.configure --- 
    nems_configure='med_atm_ocn_ice' 
    med_model='nems' 
    med_petlist_bounds="0 149" 
    atm_model='fv3' 
    atm_petlist_bounds="0 149" 
    ocn_model='mom6' 
    ocn_petlist_bounds="150 181" 
    ice_model='cice' 
    ice_petlist_bounds="182 201" 
    coupling_interval_slow_sec=1800.0  # 30min coupling, fv3 time step 
    coupling_interval_fast_sec=1800.0  # 30min coupling, fv3 time step 
 
    # Specify input files. 
    filters input { 
      #    WORK FILE  <=filter=   SOURCE FILE 
          'input.nml' <=atparse=  "@[PARMnems]/input.nml.IN" 
    'model_configure' <=atparse=  "@[PARMnems]/model_configure.IN" 
                 'aerosol.dat' <=copyfrom= "@[FV3_input_data]/INPUT" 
  'co2historicaldata_201*.txt' <=copyfrom= "@[FV3_input_data]/INPUT" 
      'sfc_emissivity_idx.txt' <=copyfrom= "@[FV3_input_data]/INPUT" 
   'solarconstant_noaa_an.txt' <=copyfrom= "@[FV3_input_data]/INPUT" 
               '*grb' <=copyfrom= "@[FV3_input_data]" 
            '*_table' <=copyfrom= "@[FV3_input_data]" 
         '*configure' <=copyfrom= "@[FV3_input_data]" 
              'INPUT' <=copy=     "@[FV3_input_data]/INPUT" 
     'nems.configure' <=atparse=  "@[PARMnems]/nems.configure.@[nems_configure].IN" 
                  '*' <=copydir=  "@[UGCS_input_data]/CICE" 
                  '*' <=copydir=  "@[UGCS_input_data]/MOM6" 
            'INPUT/*' <=copyfrom= "@[UGCS_input_data]/MOM6-INPUT" 
             'OUTPUT' <=copy=     "@[UGCS_input_data]/EmptyDir" 
            'history' <=copy=     "@[UGCS_input_data]/EmptyDir" 
            'restart' <=copy=     "@[UGCS_input_data]/EmptyDir" 
    } 
 
    # Specify output files:
    criteria output {
        # WORKFILE                            .comparison. TARGET
        'atmos_4xdaily.tile1.nc' .bitcmp. "@[CNTL]"
        'atmos_4xdaily.tile2.nc' .bitcmp. "@[CNTL]"
        'atmos_4xdaily.tile3.nc' .bitcmp. "@[CNTL]"
        'atmos_4xdaily.tile4.nc' .bitcmp. "@[CNTL]"
        'atmos_4xdaily.tile5.nc' .bitcmp. "@[CNTL]"
        'atmos_4xdaily.tile6.nc' .bitcmp. "@[CNTL]"
        'phyf000.tile1.nc'      .bitcmp. "@[CNTL]"
        'phyf000.tile2.nc'      .bitcmp. "@[CNTL]"
        'phyf000.tile3.nc'      .bitcmp. "@[CNTL]"
        'phyf000.tile4.nc'      .bitcmp. "@[CNTL]"
        'phyf000.tile5.nc'      .bitcmp. "@[CNTL]"
        'phyf000.tile6.nc'      .bitcmp. "@[CNTL]"
        'phyf024.tile1.nc'      .bitcmp. "@[CNTL]"
        'phyf024.tile2.nc'      .bitcmp. "@[CNTL]"
        'phyf024.tile3.nc'      .bitcmp. "@[CNTL]"
        'phyf024.tile4.nc'      .bitcmp. "@[CNTL]"
        'phyf024.tile5.nc'      .bitcmp. "@[CNTL]"
        'phyf024.tile6.nc'      .bitcmp. "@[CNTL]"
        'dynf000.tile1.nc'      .bitcmp. "@[CNTL]"
        'dynf000.tile2.nc'      .bitcmp. "@[CNTL]"
        'dynf000.tile3.nc'      .bitcmp. "@[CNTL]"
        'dynf000.tile4.nc'      .bitcmp. "@[CNTL]"
        'dynf000.tile5.nc'      .bitcmp. "@[CNTL]"
        'dynf000.tile6.nc'      .bitcmp. "@[CNTL]"
        'dynf024.tile1.nc'      .bitcmp. "@[CNTL]"
        'dynf024.tile2.nc'      .bitcmp. "@[CNTL]"
        'dynf024.tile3.nc'      .bitcmp. "@[CNTL]"
        'dynf024.tile4.nc'      .bitcmp. "@[CNTL]"
        'dynf024.tile5.nc'      .bitcmp. "@[CNTL]"
        'dynf024.tile6.nc'      .bitcmp. "@[CNTL]"
        'RESTART/coupler.res'                   .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.nc'                .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile1.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile2.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile3.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile4.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile5.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_core.res.tile6.nc'          .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile1.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile2.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile3.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile4.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile5.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_srf_wnd.res.tile6.nc'       .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile1.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile2.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile3.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile4.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile5.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/fv_tracer.res.tile6.nc'        .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile1.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile2.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile3.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile4.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile5.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/phy_data.tile6.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile1.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile2.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile3.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile4.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile5.nc'             .bitcmp. "@[CNTL]/RESTART/"
        'RESTART/sfc_data.tile6.nc'             .bitcmp. "@[CNTL]/RESTART/"

      # Executable validation.  This makes an MD5 sum of the fv3.exe
      # for comparison against the MD5 sum made in the build job.
      # This is to ensure the executable did not change during the
      # test suite.
        "@[build%target]" .md5cmp. "@[fv3_mom6_cice.exe%md5sum]" 
    }
 
    spawn execute { 
        # Run the  
        {"@[build%target]", ranks="@[TASKS]" } 
    } 
} 
 
######################################################################## 
